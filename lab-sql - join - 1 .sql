# 1- List the number of films per category.

select * from film;  
select * from film_category;

SELECT c.name AS category, COUNT(f.film_id) AS number_of_films
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
JOIN film f ON fc.film_id = f.film_id
GROUP BY c.name;


#2-  Retrieve the store ID, city, and country for each store
SELECT s.store_id, ci.city, co.country
FROM store s
JOIN address a ON s.address_id = a.address_id
JOIN city ci ON a.city_id = ci.city_id
JOIN country co ON ci.country_id = co.country_id;


#3. Calculate the total revenue generated by each store in dollars
SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM payment p
JOIN rental r ON p.rental_id = r.rental_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN store s ON i.store_id = s.store_id
GROUP BY s.store_id;

#4- Determine the average running time of films for each category
SELECT c.name AS category, AVG(f.length) AS average_running_time
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
JOIN film f ON fc.film_id = f.film_id
GROUP BY c.name;



# Explanation of Queries
# 1. List the number of films per category
# This query joins the category, film_category, and film tables to count the number of films in each category. It groups the results by category name.

# 2. Retrieve the store ID, city, and country for each store
# This query joins the store, address, city, and country tables to retrieve the store ID along with the corresponding city and country for each store.

# 3. Calculate the total revenue generated by each store in dollars
# This query joins the payment, rental, inventory, and store tables to calculate the total revenue generated by each store. It sums the payment amounts and groups the results by store ID.

# 4. Determine the average running time of films for each category
# This query joins the category, film_category, and film tables to calculate the average running time of films in each category. It groups the results by category name.

# These queries should be executed in a MySQL environment where the Sakila database is set up. If you have any questions or need further assistance, feel free to ask!